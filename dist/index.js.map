{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAGA,IAAM,MAAM,GAAG,wBAAS,CAAC;;AAEzB,SAAS,QAAQ,GAAG;AAChB,WAAO,IAAI,OAAO,CAAC,UAAS,OAAO,EAAE,MAAM,EAAE;AACzC,kBAAU,CAAC,YAAM;AACb,mBAAO,CAAC,KAAK,CAAC,CAAA;SACjB,EAAE,IAAI,CAAC,CAAC;KACZ,CAAC,CAAC;CACN;;AAGD,MAAM,CAAC,GAAG,CAAC,GAAG;;;wDAAE,iBAAO,GAAG,EAAE,GAAG;YACvB,OAAO;;;;;AAAP,+BAAO;;;+BAES,QAAQ,EAAE;;;AAA1B,+BAAO;;;;;;;;AAET,+BAAO,CAAC,GAAG,aAAG,CAAC;;;;AAGjB,2BAAG,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;;;;;;;;KAC7B;;;;;KAAC,CAAC;;AAEH,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,UAAC,GAAG,EAAK;AACzB,QAAG,CAAC,GAAG,EAAE;AACL,eAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;KAC/C;CACJ,CAAC,CAAC","file":"index.js","sourcesContent":["import 'babel-polyfill';\nimport express from 'express';\nimport bluebird from 'bluebird';\nconst server = express();\n\nfunction loadFile() {\n    return new Promise(function(resolve, reject) {\n        setTimeout(() => {\n            resolve('foo')\n        }, 1000);\n    });\n}\n\n\nserver.get('/', async (req, res) => {\n    let content;\n    try {\n        content = await loadFile();\n    } catch (e) {\n      console.log(e);\n    }\n\n    res.send('hello world 3');\n});\n\nserver.listen(8080, (err) => {\n    if(!err) {\n        console.log('server is start at port 8080');\n    }\n});\n"],"sourceRoot":"/source/"}